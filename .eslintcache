[{"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/index.js":"1","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/reportWebVitals.js":"2","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/App.js":"3","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/SignupPage.js":"4","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/LoginPage.js":"5","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/HomePage.js":"6","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/userService.js":"7","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Header/Header.js":"8","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Footer/Footer.js":"9","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/tokenService.js":"10","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Row/Row.js":"11","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/requestService.js":"12","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/axiosRequestService.js":"13","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Banner/Banner.js":"14","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Nav/Nav.js":"15","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Sidebar/Sidebar.js":"16","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Sidebar/SidebarData.js":"17","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/SearchPage.js":"18","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Box/Box.js":"19","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/ShowPage.js":"20","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/PersonProfile/PersonProfile.js":"21","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/MediaProfile/MediaProfile.js":"22"},{"size":590,"mtime":1607797394497,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1607642261034,"results":"25","hashOfConfig":"24"},{"size":10708,"mtime":1611726270189,"results":"26","hashOfConfig":"24"},{"size":2221,"mtime":1607800233155,"results":"27","hashOfConfig":"24"},{"size":1878,"mtime":1607799487132,"results":"28","hashOfConfig":"24"},{"size":1839,"mtime":1608792672150,"results":"29","hashOfConfig":"24"},{"size":1089,"mtime":1611549780027,"results":"30","hashOfConfig":"24"},{"size":284,"mtime":1607968271941,"results":"31","hashOfConfig":"24"},{"size":95,"mtime":1607801048361,"results":"32","hashOfConfig":"24"},{"size":668,"mtime":1607800545917,"results":"33","hashOfConfig":"24"},{"size":3005,"mtime":1611810072591,"results":"34","hashOfConfig":"24"},{"size":1287,"mtime":1609908971006,"results":"35","hashOfConfig":"24"},{"size":133,"mtime":1607829088692,"results":"36","hashOfConfig":"24"},{"size":1844,"mtime":1609231023058,"results":"37","hashOfConfig":"24"},{"size":1998,"mtime":1608020095955,"results":"38","hashOfConfig":"24"},{"size":1971,"mtime":1608791507080,"results":"39","hashOfConfig":"24"},{"size":678,"mtime":1607980536863,"results":"40","hashOfConfig":"24"},{"size":4596,"mtime":1609549420839,"results":"41","hashOfConfig":"24"},{"size":1090,"mtime":1608027020115,"results":"42","hashOfConfig":"24"},{"size":1116,"mtime":1611500440687,"results":"43","hashOfConfig":"24"},{"size":182,"mtime":1609214237279,"results":"44","hashOfConfig":"24"},{"size":3085,"mtime":1611722612396,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1x63qgy",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/index.js",[],["95","96"],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/reportWebVitals.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/App.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/SignupPage.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/LoginPage.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/HomePage.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/userService.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Header/Header.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Footer/Footer.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/tokenService.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Row/Row.js",["97","98","99","100","101"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"../../services/axiosRequestService\";\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow,\n  handleInfo,\n  imgVidShower,\n  imagesVideos,\n}) {\n  const [movies, setMovies] = useState([]);\n\n  const [imgVidRow, setImgVidRow] = useState(false);\n\n  useEffect(() => {\n    if (imgVidShower) {\n      setImgVidRow(true);\n    } else {\n      setImgVidRow(false);\n    }\n  }, [imgVidShower]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      //   console.log(request.data.results);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  //   console.log(movies);\n  //   console.table(movies);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        <>\n          {imgVidRow ? (\n            <>\n              {(imagesVideos[0]?.backdrops.length == 0) &\n                (imagesVideos[0]?.posters.length == 0) &\n                (imagesVideos[1]?.results.length == 0) ||\n              imagesVideos[0]?.profiles ? (\n                <div>No Results</div>\n              ) : (\n                <>\n                  {imagesVideos[1]?.results.map((video) => (\n                    <iframe\n                      src={`https://www.youtube.com/embed/${video.key}`}\n                      frameBorder=\"0\"\n                      key={video.id}\n                      className=\"row__video\"\n                    >\n                      {video.name}\n                    </iframe>\n                  ))}\n                  {imagesVideos[0]?.backdrops?.map((images) => (\n                    <img\n                      key={images?.file_path}\n                      className=\"row__poster\"\n                      src={`${base_url}${images?.file_path}`}\n                      alt={images?.file_path}\n                    />\n                  ))}\n                  {imagesVideos[0]?.posters?.map((image) => (\n                    <img\n                      key={image?.file_path}\n                      className=\"row__poster\"\n                      src={`${base_url}${image?.file_path}`}\n                      alt={image?.file_path}\n                    />\n                  ))}\n                </>\n              )}\n            </>\n          ) : (\n            <>\n              {movies.map((movie) => (\n                <img\n                  key={movie.id}\n                  className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                  src={`${base_url}${\n                    isLargeRow\n                      ? movie.poster_path\n                      : movie.backdrop_path || movie.poster_path\n                  }`}\n                  alt={movie.name}\n                  onClick={() => handleInfo(movie)}\n                />\n              ))}\n            </>\n          )}\n        </>\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/requestService.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/services/axiosRequestService.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Banner/Banner.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Nav/Nav.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Sidebar/Sidebar.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Sidebar/SidebarData.js",[],["102","103"],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/SearchPage.js",["104"],"// import { useState } from \"react\";\nimport Header from \"../components/Header/Header\";\n// import { searchparams, red } from \"../services/requestService\";\nimport { red } from \"../services/requestService\";\n// import Box from \"../components/Box/Box\";\nimport \"./SearchPage.css\";\nimport search from \"../images/search.png\";\nimport noimg from \"../images/no_image.png\";\n\n// import React, { useState, useEffect } from \"react\";\nimport React, { useState } from \"react\";\n// import axios from \"../services/axiosRequestService\";\n// require(\"dotenv\").config();\n// const API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction SearchPage(props) {\n  const [searchForm, setSearchForm] = useState({\n    search: \"\",\n  });\n\n  const [searchData, setSearchData] = useState([]);\n\n  const imageUrl = \"https://image.tmdb.org/t/p/original\";\n\n  // function red() {\n  //   return fetch(\n  //     `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&language=en-US&query=fish&page=1&include_adult=false`\n  //   ).then((res) => res.json());\n  // }\n\n  // useEffect(() => {\n  //   async function fetching() {\n  //     const request = await red();\n  //     console.log(request);\n  //     setSearchData(request.results);\n\n  //     return request;\n  //   }\n  //   fetching();\n  // }, []);\n\n  // console.log(searchData);\n\n  function handleChange(event) {\n    setSearchForm((prevState) => ({\n      ...prevState,\n      [event.target.name]: [event.target.value],\n    }));\n  }\n\n  async function handleSearchSubmit(event) {\n    event.preventDefault();\n    // console.log(searchForm);\n    const request = await red(searchForm.search);\n    setSearchData(request);\n    console.log(searchData);\n    setSearchForm({\n      search: \"\",\n    });\n  }\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     const request = await axios.get(searchparams(searchForm.search));\n  //     setSearchData(request);\n  //     console.log(request);\n  //     return request;\n  //   }\n  //   fetchData();\n  //   console.log(searchData);\n  // }, []);\n\n  // const url = `/search/multi?api_key=${API_KEY}&language=en-US&query=water&page=1&include_adult=false`;\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     const request = await axios.get(url);\n  //     //   console.log(request.data.results);\n  //     setSearchData(request.data.results);\n  //     // console.log(searchData);\n  //     return request;\n  //   }\n  //   fetchData();\n  //   console.log(searchData);\n  // }, [url]);\n\n  return (\n    <div className=\"search__page\">\n      <Header user={props.user} handleLogout={props.handleLogout} />\n      <main className=\"search__bigContainer\">\n        <div className=\"search__blankSpace\">{/* StandIn */}</div>\n        <div className=\"search__mainBox\">\n          <form onSubmit={handleSearchSubmit} className=\"search__form\">\n            <div className=\"search__container\">\n              <input\n                type=\"text\"\n                name=\"search\"\n                id=\"search\"\n                className=\"form__input\"\n                value={searchForm.search}\n                placeholder=\"Search\"\n                onChange={handleChange}\n              />\n              <button type=\"submit\" className=\"search__submitButton\">\n                <img src={search} alt=\"magnify\" />\n              </button>\n            </div>\n          </form>\n          {/* <Box searchparams={searchparams} searchForm={searchForm} /> */}\n          <div className=\"trap\">\n            {searchData.results?.map((a) => (\n              <div\n                key={a?.id}\n                style={{ objectFit: \"contain\" }}\n                onClick={() => props.handleInfo(a)}\n              >\n                <img\n                  src={`${imageUrl}${\n                    a?.poster_path ||\n                    a?.profile_path ||\n                    (a?.known_for &&\n                      a.known_for.length &&\n                      a?.known_for[0].poster_path)\n                  }`}\n                  alt={\n                    a?.title || a?.name || a?.original_title || a?.original_name\n                  }\n                  className=\"trap__images\"\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n      {/* <Box /> */}\n    </div>\n  );\n}\n\nexport default SearchPage;\n\n// check sink\n// {a?${imageUrl}a.poster_path}\n// if (a?.poster_path) {\n//   src={`${imageUrl}${a?.poster_path}`}\n// } else if () {\n\n// } {\n\n// }\n\n// {|| a?.known_for && [null] || a?.known_for && a?.known_for[0].poster_path}\n// || (!a?.known_for && \"/dfa2wl1TyOJQ1KZbrj2PqLVPH1u.jpg\") ||(!a?.poster_path && \"/dfa2wl1TyOJQ1KZbrj2PqLVPH1u.jpg\")\n","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/Box/Box.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/pages/ShowPage.js",["105"],"import React, { useState } from \"react\";\nimport Header from \"../components/Header/Header\";\nimport PersonProfile from \"../components/PersonProfile/PersonProfile\";\nimport MediaProfile from \"../components/MediaProfile/MediaProfile\";\nimport \"./ShowPage.css\";\n\nfunction ShowPage(props) {\n  //   const va = this.props.location.param1;\n  console.log(props);\n  // console.log(props.imgVid);\n\n  // const [showMovie, setShowMovie] = useState({\n  //   show: [],\n  // });\n\n  const grabItems = [props.details[`[object Object]`][0]];\n  // console.log(grabItems[0].id);\n  // console.log(grabItems[0].poster_path);\n  // console.log(props.genreList);\n\n  const imagesVideos = props.imgVid;\n\n  return (\n    <div className=\"show__page\">\n      <Header user={props.user} handleLogout={props.handleLogout} />\n      {grabItems[0].media_type === \"person\" ? (\n        <PersonProfile grabItems={grabItems} imagesVideos={imagesVideos} />\n      ) : (\n        <MediaProfile\n          grabItems={grabItems}\n          genreList={props.genreList}\n          imagesVideos={imagesVideos}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ShowPage;\n","/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/PersonProfile/PersonProfile.js",[],"/Users/Steven/Documents/Coding Stuff/Unit 3/Netflix - Project 3/def-not-netflix/src/components/MediaProfile/MediaProfile.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":47,"column":51,"nodeType":"112","messageId":"113","endLine":47,"endColumn":53},{"ruleId":"110","severity":1,"message":"111","line":48,"column":50,"nodeType":"112","messageId":"113","endLine":48,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":49,"column":50,"nodeType":"112","messageId":"113","endLine":49,"endColumn":52},{"ruleId":"114","severity":1,"message":"115","line":55,"column":21,"nodeType":"116","endLine":60,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":73,"column":21,"nodeType":"116","endLine":78,"endColumn":23},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["126"],["127"],"no-unused-vars","'noimg' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]